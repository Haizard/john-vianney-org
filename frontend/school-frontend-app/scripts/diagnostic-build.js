// Diagnostic build script
const fs = require('fs');
const path = require('path');

console.log('Starting diagnostic build process...');

// Create build directory
const buildDir = path.join(__dirname, '..', 'build');
if (!fs.existsSync(buildDir)) {
  fs.mkdirSync(buildDir, { recursive: true });
}

// Write the diagnostic index.html file
const indexPath = path.join(buildDir, 'index.html');
fs.writeFileSync(indexPath, `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Agape Seminary School - Diagnostic Page</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      background-color: #f5f5f5;\n    }\n    .container {\n      max-width: 800px;\n      margin: 0 auto;\n      background-color: white;\n      border-radius: 8px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n      padding: 20px;\n    }\n    h1 {\n      color: #333;\n      margin-bottom: 20px;\n    }\n    .section {\n      margin-bottom: 30px;\n      padding: 15px;\n      background-color: #f9f9f9;\n      border-radius: 5px;\n    }\n    .section h2 {\n      margin-top: 0;\n      color: #444;\n    }\n    .log {\n      background-color: #333;\n      color: #fff;\n      padding: 10px;\n      border-radius: 5px;\n      font-family: monospace;\n      white-space: pre-wrap;\n      max-height: 200px;\n      overflow-y: auto;\n    }\n    .success {\n      color: #4CAF50;\n    }\n    .error {\n      color: #f44336;\n    }\n    .warning {\n      color: #ff9800;\n    }\n    .button {\n      display: inline-block;\n      padding: 10px 20px;\n      background-color: #4CAF50;\n      color: white;\n      text-decoration: none;\n      border-radius: 4px;\n      font-weight: bold;\n      margin-right: 10px;\n    }\n    .button.secondary {\n      background-color: #2196F3;\n    }\n    #errorOutput, #consoleOutput, #networkOutput, #envOutput {\n      margin-top: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Agape Seminary School - Diagnostic Page</h1>\n    <p>This page will help diagnose deployment issues on Vercel.</p>\n    \n    <div class=\"section\">\n      <h2>Browser Information</h2>\n      <div id=\"browserInfo\"></div>\n    </div>\n    \n    <div class=\"section\">\n      <h2>Error Catching</h2>\n      <p>Any JavaScript errors will be displayed below:</p>\n      <div id=\"errorOutput\" class=\"log\"></div>\n    </div>\n    \n    <div class=\"section\">\n      <h2>Console Output</h2>\n      <p>Console messages will be displayed below:</p>\n      <div id=\"consoleOutput\" class=\"log\"></div>\n    </div>\n    \n    <div class=\"section\">\n      <h2>Network Requests</h2>\n      <p>Testing API connectivity:</p>\n      <div id=\"networkOutput\" class=\"log\"></div>\n      <button class=\"button\" onclick=\"testApiEndpoint('/api/health')\">Test Health API</button>\n      <button class=\"button secondary\" onclick=\"testApiEndpoint('/api')\">Test Root API</button>\n    </div>\n    \n    <div class=\"section\">\n      <h2>Environment</h2>\n      <p>Environment information:</p>\n      <div id=\"envOutput\" class=\"log\"></div>\n    </div>\n    \n    <div class=\"section\">\n      <h2>DOM Structure</h2>\n      <p>Testing DOM rendering:</p>\n      <div id=\"domTest\">\n        <p>If you can see this text, basic DOM rendering is working.</p>\n        <div style=\"width: 50px; height: 50px; background-color: #4CAF50;\"></div>\n      </div>\n    </div>\n    \n    <div class=\"section\">\n      <h2>Actions</h2>\n      <a href=\"/\" class=\"button\">Refresh Page</a>\n      <a href=\"/?clearcache=true\" class=\"button secondary\">Clear Cache & Refresh</a>\n    </div>\n  </div>\n\n  <script>\n    // Capture and display errors\n    window.onerror = function(message, source, lineno, colno, error) {\n      const errorOutput = document.getElementById('errorOutput');\n      errorOutput.innerHTML += `<div class=\"error\">ERROR: ${message}</div>`;\n      return false;\n    };\n    \n    // Capture and display console messages\n    const originalConsole = {\n      log: console.log,\n      warn: console.warn,\n      error: console.error,\n      info: console.info\n    };\n    \n    console.log = function() {\n      originalConsole.log.apply(console, arguments);\n      const consoleOutput = document.getElementById('consoleOutput');\n      consoleOutput.innerHTML += `<div>${Array.from(arguments).join(' ')}</div>`;\n    };\n    \n    console.warn = function() {\n      originalConsole.warn.apply(console, arguments);\n      const consoleOutput = document.getElementById('consoleOutput');\n      consoleOutput.innerHTML += `<div class=\"warning\">WARN: ${Array.from(arguments).join(' ')}</div>`;\n    };\n    \n    console.error = function() {\n      originalConsole.error.apply(console, arguments);\n      const consoleOutput = document.getElementById('consoleOutput');\n      consoleOutput.innerHTML += `<div class=\"error\">ERROR: ${Array.from(arguments).join(' ')}</div>`;\n    };\n    \n    console.info = function() {\n      originalConsole.info.apply(console, arguments);\n      const consoleOutput = document.getElementById('consoleOutput');\n      consoleOutput.innerHTML += `<div>INFO: ${Array.from(arguments).join(' ')}</div>`;\n    };\n    \n    // Test API endpoint\n    function testApiEndpoint(endpoint) {\n      const networkOutput = document.getElementById('networkOutput');\n      networkOutput.innerHTML += `<div>Testing endpoint: ${endpoint}...</div>`;\n      \n      fetch(endpoint)\n        .then(response => {\n          networkOutput.innerHTML += `<div>Status: ${response.status} ${response.statusText}</div>`;\n          return response.json();\n        })\n        .then(data => {\n          networkOutput.innerHTML += `<div class=\"success\">Response: ${JSON.stringify(data)}</div>`;\n        })\n        .catch(error => {\n          networkOutput.innerHTML += `<div class=\"error\">Error: ${error.message}</div>`;\n        });\n    }\n    \n    // Display browser information\n    function displayBrowserInfo() {\n      const browserInfo = document.getElementById('browserInfo');\n      browserInfo.innerHTML = `\n        <p><strong>User Agent:</strong> ${navigator.userAgent}</p>\n        <p><strong>Platform:</strong> ${navigator.platform}</p>\n        <p><strong>Cookies Enabled:</strong> ${navigator.cookieEnabled}</p>\n        <p><strong>Language:</strong> ${navigator.language}</p>\n        <p><strong>Online:</strong> ${navigator.onLine}</p>\n        <p><strong>Window Size:</strong> ${window.innerWidth}x${window.innerHeight}</p>\n      `;\n    }\n    \n    // Display environment information\n    function displayEnvironmentInfo() {\n      const envOutput = document.getElementById('envOutput');\n      envOutput.innerHTML += `<div><strong>URL:</strong> ${window.location.href}</div>`;\n      envOutput.innerHTML += `<div><strong>Protocol:</strong> ${window.location.protocol}</div>`;\n      envOutput.innerHTML += `<div><strong>Host:</strong> ${window.location.host}</div>`;\n      envOutput.innerHTML += `<div><strong>Pathname:</strong> ${window.location.pathname}</div>`;\n      envOutput.innerHTML += `<div><strong>Search:</strong> ${window.location.search}</div>`;\n      envOutput.innerHTML += `<div><strong>Hash:</strong> ${window.location.hash}</div>`;\n      \n      // Check for localStorage\n      try {\n        localStorage.setItem('test', 'test');\n        localStorage.removeItem('test');\n        envOutput.innerHTML += `<div class=\"success\"><strong>localStorage:</strong> Available</div>`;\n      } catch (e) {\n        envOutput.innerHTML += `<div class=\"error\"><strong>localStorage:</strong> Not available - ${e.message}</div>`;\n      }\n      \n      // Check for sessionStorage\n      try {\n        sessionStorage.setItem('test', 'test');\n        sessionStorage.removeItem('test');\n        envOutput.innerHTML += `<div class=\"success\"><strong>sessionStorage:</strong> Available</div>`;\n      } catch (e) {\n        envOutput.innerHTML += `<div class=\"error\"><strong>sessionStorage:</strong> Not available - ${e.message}</div>`;\n      }\n    }\n    \n    // Initialize\n    window.onload = function() {\n      console.log('Diagnostic page loaded');\n      displayBrowserInfo();\n      displayEnvironmentInfo();\n      \n      // Check for URL parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      if (urlParams.has('clearcache')) {\n        console.log('Clearing cache...');\n        // Clear localStorage\n        try {\n          localStorage.clear();\n          console.log('localStorage cleared');\n        } catch (e) {\n          console.error('Failed to clear localStorage:', e);\n        }\n        \n        // Clear sessionStorage\n        try {\n          sessionStorage.clear();\n          console.log('sessionStorage cleared');\n        } catch (e) {\n          console.error('Failed to clear sessionStorage:', e);\n        }\n      }\n      \n      // Test API endpoints automatically\n      setTimeout(() => {\n        testApiEndpoint('/api/health');\n      }, 1000);\n    };\n    \n    // Log any unhandled promise rejections\n    window.addEventListener('unhandledrejection', function(event) {\n      console.error('Unhandled promise rejection:', event.reason);\n    });\n    \n    // Log any resource loading errors\n    window.addEventListener('error', function(event) {\n      if (event.target && (event.target.tagName === 'SCRIPT' || event.target.tagName === 'LINK' || event.target.tagName === 'IMG')) {\n        console.error(`Failed to load resource: ${event.target.src || event.target.href}`);\n      }\n    }, true);\n    \n    console.log('Diagnostic script initialized');\n  </script>\n</body>\n</html>`);

// Create a _redirects file for Vercel
const redirectsPath = path.join(buildDir, '_redirects');
fs.writeFileSync(redirectsPath, '/* /index.html 200');

// Create a simple 404 page
const notFoundPath = path.join(buildDir, '404.html');
fs.writeFileSync(notFoundPath, `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="refresh" content="0;url=/">
  <title>Redirecting...</title>
</head>
<body>
  <p>Redirecting to home page...</p>
  <script>window.location.href = '/';</script>
</body>
</html>
`);

console.log('Diagnostic build completed successfully!');
